# -*- coding: utf-8 -*-
"""Manhattan Distance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T7WXtvICBMwRImsjSi5FUJM4_4vFezZX
"""

import copy

def get_input(prompt):
    print(prompt)
    while True:
        try:
            user_input = [int(x) for x in input().split()]
            if len(user_input) != 9:
                print("Please enter exactly 9 numbers.")
            elif 0 not in user_input:
                print("Please include 0 in the input.")
            else:
                return user_input
        except ValueError:
            print("Invalid input. Please enter numbers separated by spaces.")

def print_state(state):
    for i in range(0, 9, 3):
        print(state[i:i+3])
    print()

def manhattan_distance(state, goal):
    distance = 0
    for num in range(1, 9):
        idx_state = state.index(num)
        idx_goal = goal.index(num)
        x1, y1 = idx_state // 3, idx_state % 3
        x2, y2 = idx_goal // 3, idx_goal % 3
        distance += abs(x1 - x2) + abs(y1 - y2)
    return distance

def get_neighbors(state):
    neighbors = []
    idx = state.index(0)
    moves = []

    if idx % 3 != 0:  # left
        moves.append(idx - 1)
    if idx % 3 != 2:  # right
        moves.append(idx + 1)
    if idx > 2:       # up
        moves.append(idx - 3)
    if idx < 6:       # down
        moves.append(idx + 3)

    for move in moves:
        new_state = state[:]
        new_state[idx], new_state[move] = new_state[move], new_state[idx]
        neighbors.append(new_state)

    return neighbors

def hill_climb(start, goal):
    current = start
    while True:
        print_state(current)
        if current == goal:
            print("Reached goal!")
            return
        neighbors = get_neighbors(current)
        current_h = manhattan_distance(current, goal)
        next_state = current
        for n in neighbors:
            h = manhattan_distance(n, goal)
            if h < current_h:
                next_state = n
                current_h = h
        if next_state == current:
            print("Stuck in local optimum!")
            return
        current = next_state


start = get_input("Enter start state (9 numbers, use 0 for blank):")
goal = get_input("Enter goal state (9 numbers, use 0 for blank):")

hill_climb(start, goal)